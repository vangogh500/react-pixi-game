{
  "sidenav": {
    "section_1": {
      "title": "基本",
      "boilerplate": "ボイラープレート",
      "geometry": "幾何形状",
      "sprites": "スプライト",
      "animations": "アニメーション",
      "animatedsprite": "アニメーションスプライト",
      "tilingsprite": "タイルスプライト"
    },
    "section_2": {
      "title": "フィルター",
      "blur": "ぼかし",
      "displacement": "変位",
      "animating": "アニメーションフィルタ"
    },
    "section_3": {
      "title": "ユーザーとのやり取り",
      "mouse": "マウス　イベント",
      "keyboard": "キーボード　イベント"
    }
  },
  "home": {
    "title": "RPGへようこそ",
    "subtitle": "作成者：Vangogh500 (松田　鹿飛)",
    "subtext": "フェイスブックのReactとWebGLを利用するピックシーによるウェブ開発。",
    "section_1": {
      "main_title": "RPGを利用する理由",
      "title_1": "WebGLの力を活用:",
      "text_1": "ユーザーのGPUを利用すれば、より高度なアプリを僅かなパフォーマンスコストで制作できます。CPUとGPUの共同作業により、現代のアプリにふさわしい力を得ることができます。",
      "title_2": "Reactの単純さ、モジュール性を利用:",
      "text_2": "今でも世界中の人気を得ているフェイスブックのリアクトを使い、ピックシーをカプセル化しました。 これによってより単純、再利用可能なWebGLコードが書けると思います。またリアクトを利用する事でリーダックスなどなサードパーティーライブラリーと互換性があるUIを開発する事ができます。"
    },
    "section_2": {
      "title": "依存性",
      "subtext": "このプロジェクトはvangogh500-physics（Akkaの並行性モデルを利用した物理エンジン）と共同に開発されています。"
    },
    "section_3": {
      "title": "インストール",
      "subtext_1": "現在RPGはnpm（ノードパッケージマネージャ）で利用可能です。",
      "subtext_2": "RPGをプロジェクトに追加するには次のコマンドを入力してください：　"
    },
    "section_4": {
      "title": "デブ　ロッグ:"
    },
    "notes": {
      "version": "現在はバージョン 0.0.9.",
      "migration": "スカラの特性と効率を目指し、Scala.jsへ移動中。スカラを活用する事で akkaの並行性モデルが利用できます。 これによりブラウザでのマルチプロセスでさらに性能を上げられます。",
      "contribution": {
        "text": "プロジェクトに貢献したい方はギットハブを利用して連絡してください。",
        "link": "プロフィールはこちら。"
      }
    }
  },
  "boilerplate": {
    "line_1": "ピックシーアプリはゲームコンポと一緒に生成されます。ゲームループはデフォルトで供給されます。",
    "line_2": "ステージコンポはアプリの画像エンジンと画像画面をDOMに自動生成します。ブラウザーとWebGLとの互換性があればWebGLを利用します。なければブラウザーのキャンバスにデフォルトします。",
    "line_3": "ワールドコンポ (開発中) はアプリの物理エンジンを生成します。"
  },
  "geometry": {
    "line_1": "RPGには２種類の幾何学的形状が存在します。"
  },
  "sprites": {
    "line_1": "スプライトコンポは画像へのURLで生成できますが効率の為リソースコンポで画像をプリロードする事がお勧めです。",
    "line_2": "この例ではリソースコンポにスプライトシートのメタデータを適用しました。読み込み終了までリソースコンポはアプリをレンダーしません。"
  },
  "animations": {
    "line_1": "チックイベントコンポで自動的にゲームループへのアクセスが可能です。カスタムなコールバックへのレファレンスを適用してください。レファレンスでなければイベントリスナーから切り離せません。ループはデフォルトで毎秒３０フレイムの速度で呼ばれます。",
    "line_2": "このデザインはreact-game-kitライブラリーをインスピレーションにして開発されました。"
  },
  "animatedsprite": {
    "line_1": "ピックシーのアニメーションスプライトをコンポした物も在ります。より簡単にスプライトアニメーションが出来ます。"
  },
  "tilingsprite": {
    "line_1": "タイリングスプライトコンポで背景を描けます."
  }
}
